4. 寻找两个有序数组的中位数
题目描述

给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。

请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。

你可以假设 nums1 和 nums2 不会同时为空。

示例 1:

nums1 = [1, 3]
nums2 = [2]

则中位数是 2.0

示例 2:

nums1 = [1, 2]
nums2 = [3, 4]

则中位数是 (2 + 3)/2 = 2.5

代码：
#include<stdio.h>
int main()
{
        int nums1[100]={0},nums2[100]={0},s[200]={0};
        int m,n;
        float x=0;
        scanf("%d %d",&m,&n);
        for(int i=0;i<m;i++){
                scanf("%d",&nums1[i]);
                s[i]=nums1[i];
        }
        for(int i=0;i<n;i++){
                scanf("%d",&nums2[i]);
                s[m+i]=nums2[i];
        }
        for(int i=0;i<(m+n);i++){
                if(s[i]>s[i+1]){
                        int temp=s[i];
                        s[i]=s[i+1];
                        s[i+1]=temp;
                }
        }
        if((m+n)%2==0)
                x=(float)(s[(m+n)/2]+s[(m+n-2)/2])/2;
        else
                x=s[(m+n-1)/2];
        printf("%.1f\n",x);
        return 0;
}

